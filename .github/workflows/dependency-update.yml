name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.9"

jobs:
  update-dependencies:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools pipdeptree

    - name: Check for outdated packages
      run: |
        echo "## Outdated Dependencies" >> $GITHUB_STEP_SUMMARY
        pip list --outdated --format=columns >> $GITHUB_STEP_SUMMARY

    - name: Generate dependency tree
      run: |
        echo "## Current Dependency Tree" >> $GITHUB_STEP_SUMMARY
        pipdeptree >> $GITHUB_STEP_SUMMARY

    - name: Check security vulnerabilities
      run: |
        pip install safety
        echo "## Security Check Results" >> $GITHUB_STEP_SUMMARY
        safety check --json >> safety-report.json || true
        if [ -f safety-report.json ]; then
          echo "Security vulnerabilities found. Check the safety report." >> $GITHUB_STEP_SUMMARY
        else
          echo "No security vulnerabilities found." >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: safety-report.json

  test-with-updated-deps:
    name: Test with Updated Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Update dependencies and test
      run: |
        # Create updated requirements files
        pip-compile --upgrade requirements.txt
        pip-compile --upgrade requirements-test.txt

        # Run tests with updated dependencies
        tox -e py311

    - name: Create PR with updated dependencies
      if: github.event_name == 'workflow_dispatch'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: update dependencies'
        body: |
          This PR updates project dependencies to their latest versions.

          ## Changes
          - Updated production dependencies
          - Updated test dependencies
          - All tests pass with updated dependencies

          ## Testing
          - [x] All unit tests pass
          - [x] All integration tests pass
          - [x] Linting passes
          - [x] Security checks pass
        branch: update-dependencies
        delete-branch: true
