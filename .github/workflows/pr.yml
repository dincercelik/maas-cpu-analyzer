name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

env:
  PYTHON_VERSION: "3.9"

jobs:
  pr-checks:
    name: PR Quality Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Run tests
      run: tox -e py311

    - name: Run linting
      run: tox -e lint

    - name: Run type checking
      run: tox -e type

    - name: Run formatting check
      run: tox -e format

    - name: Run security checks
      run: tox -e security

    - name: Check for TODO/FIXME comments
      run: |
        if grep -r "TODO\|FIXME" maas_cpu_analyzer/ --exclude-dir=__pycache__; then
          echo "Found TODO/FIXME comments in code"
          exit 1
        fi

    - name: Check for debug prints
      run: |
        if grep -r "print(" maas_cpu_analyzer/ --exclude-dir=__pycache__; then
          echo "Found print statements in code"
          exit 1
        fi

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Run tests with coverage
      run: tox -e coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit

    - name: Run safety check
      run: safety check

    - name: Run pip-audit
      run: pip-audit --desc --format=json --output=audit-results.json

    - name: Upload audit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-audit
        path: audit-results.json
